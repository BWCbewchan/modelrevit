[{"D:\\ProjectForCauPha\\client\\client\\src\\index.js":"1","D:\\ProjectForCauPha\\client\\client\\src\\App.js":"2","D:\\ProjectForCauPha\\client\\client\\src\\reportWebVitals.js":"3","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Home.js":"4","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Main.js":"5","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Message\\Message.js":"6","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Manager\\Manager.js":"7","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Map\\Map.js":"8","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Calendar\\Calendar.js":"9","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Login\\Login.js":"10","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Archive\\Archive.js":"11","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Message\\ChatDetail.js":"12","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Message\\MessageList.js":"13","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Message\\MediaStorage.js":"14","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Viewer\\ViewerFunctions.js":"15","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Auth.js":"16"},{"size":552,"mtime":1714016574287,"results":"17","hashOfConfig":"18"},{"size":1221,"mtime":1717082666449,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1712834121792,"results":"20","hashOfConfig":"18"},{"size":18596,"mtime":1717090938701,"results":"21","hashOfConfig":"18"},{"size":12874,"mtime":1717091000763,"results":"22","hashOfConfig":"18"},{"size":13346,"mtime":1717091136775,"results":"23","hashOfConfig":"18"},{"size":84,"mtime":1716894625104,"results":"24","hashOfConfig":"18"},{"size":72,"mtime":1716894611308,"results":"25","hashOfConfig":"18"},{"size":87,"mtime":1716894618559,"results":"26","hashOfConfig":"18"},{"size":2315,"mtime":1717100365174,"results":"27","hashOfConfig":"18"},{"size":96,"mtime":1716894593583,"results":"28","hashOfConfig":"18"},{"size":863,"mtime":1716977966266,"results":"29","hashOfConfig":"18"},{"size":1689,"mtime":1716979764455,"results":"30","hashOfConfig":"18"},{"size":1061,"mtime":1716977961783,"results":"31","hashOfConfig":"18"},{"size":3913,"mtime":1712900224930,"results":"32","hashOfConfig":"18"},{"size":314,"mtime":1717090968689,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vqykqe",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ProjectForCauPha\\client\\client\\src\\index.js",[],[],"D:\\ProjectForCauPha\\client\\client\\src\\App.js",[],[],"D:\\ProjectForCauPha\\client\\client\\src\\reportWebVitals.js",[],[],"D:\\ProjectForCauPha\\client\\client\\src\\pages\\Home.js",["86","87","88"],[],"import MenuIcon from '@mui/icons-material/Menu';\r\nimport { AppBar, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Drawer, FormControl, IconButton, InputLabel, List, ListItem, ListItemIcon, ListItemText, MenuItem, Select, Toolbar, Typography, Collapse, Avatar } from '@mui/material'; // Thêm Collapse vào import\r\nimport React, { Component } from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport launchViewer, { getSelection } from './Viewer/ViewerFunctions';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess'; // Thêm ExpandLess vào import\r\nimport ExpandMore from '@mui/icons-material/ExpandMore'; // Thêm ExpandMore vào import\r\n\r\n// Import các icon cần thiết\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\r\nimport MessageIcon from '@mui/icons-material/Message';\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport ArchiveIcon from '@mui/icons-material/Archive';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            drawerOpen: false, // State để kiểm soát Drawer\r\n            doorFinish: \"Satin\",\r\n            collections: [],\r\n            selectedCollection: '',\r\n            documents: [],\r\n            collectionDetails: {}, // To store the linkanh and urn for each collection\r\n            selectedCarouselIndex: 0, // Track the index of the selected item in the carousel\r\n            showCarousel: true, // State to control the visibility of the carousel\r\n            openProject: false, // State to control the visibility of project list\r\n            selectedItem: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchCollections();\r\n        fetch('https://revitmongo.onrender.com/zz')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.collections) {\r\n                    const collections = data.collections;\r\n                    this.setState({ collections }, () => {\r\n                        this.fetchDocumentsInCollection(collections[0]);\r\n\r\n                    });\r\n                } else {\r\n                    console.error('Error: collections data not found in response:', data);\r\n                }\r\n            })\r\n            .catch(error => console.error('Error fetching collections:', error));\r\n    }\r\n    fetchCollections = () => {\r\n        fetch('https://revitmongo.onrender.com/zz')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.collections) {\r\n                    const collections = data.collections;\r\n                    this.setState({ collections }, () => {\r\n                        if (collections.length > 0) {\r\n                            this.fetchFirstDocumentDetails(collections[0]);\r\n                        }\r\n                    });\r\n                } else {\r\n                    console.error('Error: collections data not found in response:', data);\r\n                }\r\n            })\r\n            .catch(error => console.error('Error fetching collections:', error));\r\n    }\r\n    fetchFirstDocumentDetails = (collectionName) => {\r\n        fetch(`https://revitmongo.onrender.com/collections/${collectionName}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data && data.length > 0) {\r\n                    const firstDocument = data[0];\r\n                    if (firstDocument.linkanh && firstDocument.urn) {\r\n                        this.setState(prevState => ({\r\n                            collectionDetails: {\r\n                                ...prevState.collectionDetails,\r\n                                [collectionName]: {\r\n                                    linkanh: firstDocument.linkanh,\r\n                                    urn: firstDocument.urn,\r\n                                    location: firstDocument.location // Add location field if it exists\r\n                                }\r\n                            },\r\n                            selectedDocument: firstDocument\r\n                        }), () => {\r\n                            const documentId = `urn:${firstDocument.urn}`;\r\n                            launchViewer('viewerDiv', documentId);\r\n                        });\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => console.error(`Error fetching first document of ${collectionName}:`, error));\r\n    }\r\n\r\n    fetchDocumentDetails = (document) => {\r\n        this.setState({ selectedDocument: document }, () => {\r\n            const documentId = `urn:${document.urn}`;\r\n            launchViewer('viewerDiv', documentId);\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ doorFinish: event.target.value });\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    }\r\n\r\n    handleCollectionChange = (event) => {\r\n        const collectionName = event.target.value;\r\n        this.setState({ selectedCollection: collectionName });\r\n        this.fetchDocumentsInCollection(collectionName);\r\n        this.fetchFirstDocumentDetails(collectionName);\r\n    }\r\n\r\n    fetchDocumentsInCollection = (collectionName) => {\r\n        if (collectionName) {\r\n            fetch(`https://revitmongo.onrender.com/collections/${collectionName}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({ documents: data });\r\n                })\r\n                .catch(error => console.error('Error fetching documents:', error));\r\n        } else {\r\n            this.setState({ documents: [] });\r\n        }\r\n    }\r\n\r\n    handleCarouselChange = (index) => {\r\n        if (this.state.selectedCarouselIndex !== index) {\r\n            this.setState({ selectedCarouselIndex: index });\r\n        }\r\n    }\r\n\r\n    handleCarouselItemClick = (index) => {\r\n        const document = this.state.documents[index];\r\n        this.setState({ selectedCarouselIndex: index });\r\n        this.fetchDocumentDetails(document);\r\n    }\r\n\r\n    toggleCarouselVisibility = () => {\r\n        this.setState(prevState => ({ showCarousel: !prevState.showCarousel }));\r\n    }\r\n\r\n    // Hàm mở Drawer\r\n    handleDrawerOpen = () => {\r\n        this.setState({ drawerOpen: true });\r\n    }\r\n\r\n    // Hàm đóng Drawer\r\n    handleDrawerClose = () => {\r\n        this.setState({ drawerOpen: false });\r\n    }\r\n    // Hàm để mở và đóng danh sách dự án con\r\n    handleProjectClick = () => {\r\n        this.setState(prevState => ({\r\n            openProject: !prevState.openProject\r\n        }));\r\n    }\r\n\r\n    handleListItemClick = (item, index) => {\r\n        this.setState({\r\n            selectedItem: item,\r\n            selectedItemIndex: index\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { open, doorFinish, collections, selectedCollection, documents, collectionDetails, selectedCarouselIndex, showCarousel, drawerOpen, openProject, selectedItem, selectedDocument } = this.state; // Thêm openProject vào đây\r\n\r\n        const selectedCollectionName = collections[selectedCarouselIndex];\r\n        const selectedDocumentUrn = selectedDocument?.urn;\r\n\r\n\r\n        const responsive = {\r\n            superLargeDesktop: {\r\n                breakpoint: { max: 4000, min: 3000 },\r\n                items: 4\r\n            },\r\n            desktop: {\r\n                breakpoint: { max: 3000, min: 1024 },\r\n                items: 4\r\n            },\r\n            tablet: {\r\n                breakpoint: { max: 1024, min: 464 },\r\n                items: 2\r\n            },\r\n            mobile: {\r\n                breakpoint: { max: 464, min: 0 },\r\n                items: 1\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className='viewer-home'>\r\n                <AppBar position=\"static\" style={{ marginBottom: 25 }}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            size=\"large\"\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            aria-label=\"menu\"\r\n                            sx={{ mr: 2 }}\r\n                            onClick={this.handleDrawerOpen}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                      <Avatar src='https://th.bing.com/th/id/OIP.Kq_YUiiLMLNK2gEG6RY9bQHaHa?w=170&h=180&c=7&r=0&o=5&pid=1.7'></Avatar>\r\n                        <Typography variant=\"h6\" component=\"div\" style={{ marginLeft:'10px',flexGrow: 1, fontSize: '14px' }}>\r\n                            Công Ty Cổ Phần Công Trình Cầu Phà Thành Phố Hồ Chí Minh <br/> Xí Nghiệp Công Trình 8\r\n                        </Typography>\r\n                        <Button color=\"inherit\" onClick={this.handleClickOpen}>Update</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                {/* Drawer */}\r\n                <Drawer\r\n                    anchor=\"left\"\r\n                    open={drawerOpen}\r\n                    onClose={this.handleDrawerClose}\r\n                >\r\n                    <List>\r\n                        {/* Thông tin của người dùng */}\r\n                        <ListItem style={{  paddingTop: 20, borderRadius: 8 }} >\r\n                            <img src=\"link-to-user-image\" alt=\"User\" style={{ width: 50, height: 50, borderRadius: '50%' }} />\r\n                            <ListItemText primary=\"Tên Người Dùng\" secondary=\"Chức Vụ\" />\r\n                        </ListItem>\r\n\r\n                        {/* Mục Dự án */}\r\n                        <ListItem button onClick={this.handleProjectClick} style={{ paddingTop: 20, borderRadius: 8 }} >\r\n                            <ListItemIcon><WorkIcon /></ListItemIcon>\r\n                            <ListItemText primary=\"Dự án\" />\r\n                            {openProject ? <ExpandLess /> : <ExpandMore />}\r\n                        </ListItem>\r\n                        <Collapse in={openProject} timeout=\"auto\" unmountOnExit>\r\n                            {/* Danh sách các dự án con */}\r\n                            <div style={{ paddingLeft: 50 }}>\r\n                                <List component=\"ul\">\r\n                                    {collections.map(collection => (\r\n                                        <ListItem \r\n                                            button \r\n                                            key={collection} \r\n                                            style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === collection ? '#3177a7' : 'inherit',color: selectedItem === collection ? '#fff' : 'inherit' }} \r\n                                            onClick={() => this.handleListItemClick(collection)}\r\n                                        >\r\n                                            <ListItemText primary={collection} />\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </List>\r\n                            </div>\r\n                        </Collapse>\r\n\r\n\r\n                        {/* Các mục khác */}\r\n                        <ListItem button style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === 'manageAccounts' ? '#3177a7' : 'inherit',color: selectedItem === 'manageAccounts' ? '#fff' : 'inherit' }} onClick={() => this.handleListItemClick('manageAccounts')}>\r\n                            <ListItemIcon><ManageAccountsIcon /></ListItemIcon>\r\n                            <ListItemText primary=\"Quản lý\" />\r\n                        </ListItem>\r\n                        <ListItem button style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === 'message' ? '#3177a7' : 'inherit',color: selectedItem === 'message' ? '#fff' : 'inherit' }} onClick={() => this.handleListItemClick('message')}>\r\n                            <ListItemIcon><MessageIcon /></ListItemIcon>\r\n                            <ListItemText primary=\"Tin nhắn\" />\r\n                        </ListItem>\r\n                        <ListItem button style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === 'map' ? '#3177a7' : 'inherit',color: selectedItem === 'map' ? '#fff' : 'inherit' }} onClick={() => this.handleListItemClick('map')}>\r\n                            <ListItemIcon><MapIcon /></ListItemIcon>\r\n                            <ListItemText primary=\"Map\" />\r\n                        </ListItem>\r\n                        <ListItem button style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === 'archive' ? '#3177a7' : 'inherit',color: selectedItem === 'archive' ? '#fff' : 'inherit' }} onClick={() => this.handleListItemClick('archive')}>\r\n                            <ListItemIcon><ArchiveIcon /></ListItemIcon>\r\n                            <ListItemText primary=\"Lưu trữ\" />\r\n                        </ListItem>\r\n                        <ListItem button style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === 'calendar' ? '#3177a7' : 'inherit',color: selectedItem === 'calendar' ? '#fff' : 'inherit' }} onClick={() => this.handleListItemClick('calendar')}>\r\n                            <ListItemIcon><CalendarTodayIcon /></ListItemIcon>\r\n                            <ListItemText primary=\"Lịch\" />\r\n                        </ListItem>\r\n\r\n                    </List>\r\n                </Drawer>\r\n\r\n\r\n\r\n\r\n                {/* Toggle button for carousel */}\r\n                <Button className='buttonHideorShow' onClick={this.toggleCarouselVisibility}>\r\n                    {showCarousel ? 'Hide Carousel' : 'Show Carousel'}\r\n                </Button>\r\n\r\n                {/* Conditional rendering of the carousel */}\r\n                {showCarousel && (\r\n                        <div className=\"carousel-container\">\r\n                            <Carousel\r\n                                responsive={responsive}\r\n                                showArrows={true}\r\n                                autoPlay={false}\r\n                                infiniteLoop={true}\r\n                                showThumbs={false}\r\n                                afterChange={this.handleCarouselChange}\r\n                            >\r\n                                {documents.map((document, index) => (\r\n                                    <div\r\n                                        key={index}\r\n                                        className={`carousel-item ${selectedCarouselIndex === index ? 'selected' : ''}`}\r\n                                        onClick={() => this.handleCarouselItemClick(index)}\r\n                                    >\r\n                                        <div className=\"card\">\r\n\r\n                                            <img\r\n                                                src={document.linkanh || \"https://via.placeholder.com/150\"}\r\n                                                className=\"card-img-top\"\r\n                                                alt={`Model ${index + 1}`}\r\n                                            />\r\n                                            <div className=\"card-body\">\r\n                                                <h5 className=\"card-title\">{document.name}</h5>\r\n                                                <p className=\"card-text\">{document.location || 'Location not available'}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </Carousel>\r\n                        </div>\r\n                    )}\r\n\r\n                \r\n                {selectedDocumentUrn && (\r\n                    <>\r\n                        {\r\n                            (() => {\r\n                                const documentId = `urn:${selectedDocumentUrn}`;\r\n                                launchViewer('viewerDiv', documentId);\r\n                            })()\r\n                        }\r\n                        <div style={{ position: \"absolute\", width: \"100%\", height: showCarousel ? \"58%\" : \"84%\" }} id=\"viewerDiv\" />\r\n                    </>\r\n                )}\r\n\r\n                {/* Dialog */}\r\n                                    {/* Dialog */}\r\n                    <Dialog\r\n                        open={open}\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        <DialogTitle>Door Finish Update</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Please select door finish value.\r\n                            </DialogContentText>\r\n                            <FormControl sx={{ m: 2, minWidth: 200 }} size=\"small\">\r\n                                <InputLabel>Collections</InputLabel>\r\n                                <Select\r\n                                    value={selectedCollection}\r\n                                    label=\"Collections\"\r\n                                    onChange={this.handleCollectionChange}\r\n                                >\r\n                                    <MenuItem value=\"\">Select a collection</MenuItem>\r\n                                    {collections.map(collection => (\r\n                                        <MenuItem key={collection} value={collection}>{collection}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                            {selectedCollection && (\r\n                                <div>\r\n                                    <h2>Documents in {selectedCollection}</h2>\r\n                                    <pre>{JSON.stringify(documents, null, 2)}</pre>\r\n                                </div>\r\n                            )}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose}>Cancel</Button>\r\n                            <Button onClick={() => getSelection(doorFinish)}>Save</Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Main.js",["89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114"],[],"import MenuIcon from '@mui/icons-material/Menu';\r\nimport { AppBar, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Drawer, FormControl, IconButton, InputLabel, List, ListItem, ListItemIcon, ListItemText, MenuItem, Select, Toolbar, Typography, Collapse ,Avatar} from '@mui/material'; // Thêm Collapse vào import\r\nimport React, { Component } from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport launchViewer, { getSelection } from './Viewer/ViewerFunctions';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess'; // Thêm ExpandLess vào import\r\nimport ExpandMore from '@mui/icons-material/ExpandMore'; // Thêm ExpandMore vào import\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\n// Import các icon cần thiết\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\r\nimport MessageIcon from '@mui/icons-material/Message';\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport ArchiveIcon from '@mui/icons-material/Archive';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            doorFinish: \"Satin\",\r\n            collections: [],\r\n            selectedCollection: '',\r\n            documents: [],\r\n            collectionDetails: {}, // To store the linkanh and urn for each collection\r\n            selectedCarouselIndex: 0, // Track the index of the selected item in the carousel\r\n            showCarousel: true // State to control the visibility of the carousel\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchCollections();\r\n    }\r\n\r\n    fetchCollections = () => {\r\n        fetch('https://revitmongo.onrender.com/zz')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.collections) {\r\n                    const collections = data.collections;\r\n                    this.setState({ collections }, () => {\r\n                        collections.forEach(collection => {\r\n                            this.fetchFirstDocumentDetails(collection);\r\n                        });\r\n                    });\r\n                } else {\r\n                    console.error('Error: collections data not found in response:', data);\r\n                }\r\n            })\r\n            .catch(error => console.error('Error fetching collections:', error));\r\n    }\r\n\r\n    fetchFirstDocumentDetails = (collectionName) => {\r\n        fetch(`https://revitmongo.onrender.com/collections/${collectionName}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data && data.length > 0) {\r\n                    const firstDocument = data[0];\r\n                    if (firstDocument.linkanh && firstDocument.urn) {\r\n                        this.setState(prevState => ({\r\n                            collectionDetails: {\r\n                                ...prevState.collectionDetails,\r\n                                [collectionName]: {\r\n                                    linkanh: firstDocument.linkanh,\r\n                                    urn: firstDocument.urn,\r\n                                    location: firstDocument.location // Add location field if it exists\r\n                                }\r\n                            }\r\n                        }));\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => console.error(`Error fetching first document of ${collectionName}:`, error));\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ doorFinish: event.target.value });\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    }\r\n\r\n    handleCollectionChange = (event) => {\r\n        const collectionName = event.target.value;\r\n        this.setState({ selectedCollection: collectionName });\r\n        this.fetchDocumentsInCollection(collectionName);\r\n    }\r\n\r\n    fetchDocumentsInCollection = (collectionName) => {\r\n        if (collectionName) {\r\n            fetch(`https://revitmongo.onrender.com/collections/${collectionName}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({ documents: data });\r\n                })\r\n                .catch(error => console.error('Error fetching documents:', error));\r\n        } else {\r\n            this.setState({ documents: [] });\r\n        }\r\n    }\r\n\r\n    handleCarouselChange = (index) => {\r\n        if (this.state.selectedCarouselIndex !== index) {\r\n            this.setState({ selectedCarouselIndex: index });\r\n        }\r\n    }\r\n\r\n    handleCarouselItemClick = (index) => {\r\n        this.setState({ selectedCarouselIndex: index });\r\n    }\r\n\r\n    toggleCarouselVisibility = () => {\r\n        this.setState(prevState => ({ showCarousel: !prevState.showCarousel }));\r\n    }\r\n\r\n    // Hàm mở Drawer\r\n    handleDrawerOpen = () => {\r\n        this.setState({ drawerOpen: true });\r\n    }\r\n\r\n    // Hàm đóng Drawer\r\n    handleDrawerClose = () => {\r\n        this.setState({ drawerOpen: false });\r\n    }\r\n    // Hàm để mở và đóng danh sách dự án con\r\n    handleProjectClick = () => {\r\n        this.setState(prevState => ({\r\n            openProject: !prevState.openProject\r\n        }));\r\n    }\r\n    \r\n    handleListItemClick = (item) => {\r\n        this.setState((prevState) => ({\r\n            selectedItem: prevState.selectedItem === item ? null : item\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const { open, doorFinish, collections, selectedCollection, documents, collectionDetails, selectedCarouselIndex, showCarousel, drawerOpen, openProject,selectedItem  } = this.state; // Thêm openProject vào đây\r\n\r\n            const selectedCollectionName = collections[selectedCarouselIndex];\r\n            const selectedCollectionUrn = collectionDetails[selectedCollectionName]?.urn;\r\n\r\n        const responsive = {\r\n            superLargeDesktop: {\r\n                breakpoint: { max: 4000, min: 3000 },\r\n                items: 4\r\n            },\r\n            desktop: {\r\n                breakpoint: { max: 3000, min: 1024 },\r\n                items: 4\r\n            },\r\n            tablet: {\r\n                breakpoint: { max: 1024, min: 464 },\r\n                items: 2\r\n            },\r\n            mobile: {\r\n                breakpoint: { max: 464, min: 0 },\r\n                items: 1\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className='viewer-home' style={{ display: 'flex' }}>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    anchor=\"left\"\r\n                    sx={{\r\n                        width: 240,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                            width: 240,\r\n                            boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                >\r\n                    <Toolbar />\r\n                    <div>\r\n                    <List>\r\n                            {/* Thông tin của người dùng */}\r\n                            <ListItem style={{  paddingTop: 20, borderRadius: 8 }} >\r\n                                <img src=\"link-to-user-image\" alt=\"User\" style={{ width: 50, height: 50, borderRadius: '50%' }} />\r\n                                <ListItemText primary=\"Tên Người Dùng\" secondary=\"Chức Vụ\" />\r\n                            </ListItem>\r\n\r\n                            {/* Mục Dự án */}\r\n                            <ListItem \r\n    button \r\n    onClick={this.handleProjectClick} \r\n    style={{ paddingTop: 20, borderRadius: 8 }}\r\n    component={Link} \r\n    to=\"/view\"\r\n>\r\n    <ListItemIcon><WorkIcon /></ListItemIcon>\r\n    <ListItemText primary=\"Dự án\" />\r\n    {openProject ? <ExpandLess /> : <ExpandMore />}\r\n</ListItem>\r\n                            <Collapse in={openProject} timeout=\"auto\" unmountOnExit>\r\n                                {/* Danh sách các dự án con */}\r\n                                <div style={{ paddingLeft: 50 }}>\r\n                                    <List component=\"ul\">\r\n                                        {collections.map(collection => (\r\n                                            <ListItem \r\n                                                button \r\n                                                key={collection} \r\n                                                style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === collection ? '#3177a7' : 'inherit',color: selectedItem === collection ? '#fff' : 'inherit' }} \r\n                                                onClick={() => this.handleListItemClick(collection)}\r\n                                            >\r\n                                                <ListItemText primary={collection} />\r\n                                            </ListItem>\r\n                                        ))}\r\n                                    </List>\r\n                                </div>\r\n                            </Collapse>\r\n\r\n\r\n                            {/* Các mục khác */}\r\n                            <ListItem button component={Link} to=\"/manager\" style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === 'manageAccounts' ? '#3177a7' : 'inherit',color: selectedItem === 'manageAccounts' ? '#fff' : 'inherit' }} onClick={() => this.handleListItemClick('manageAccounts')}>\r\n                                <ListItemIcon><ManageAccountsIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"Quản lý\" />\r\n                            </ListItem>\r\n                            <ListItem button component={Link} to=\"/message\" style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === 'message' ? '#3177a7' : 'inherit',color: selectedItem === 'message' ? '#fff' : 'inherit' }} onClick={() => this.handleListItemClick('message')}>\r\n                                <ListItemIcon><MessageIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"Tin nhắn\" />\r\n                            </ListItem>\r\n                            <ListItem button component={Link} to=\"/map\" style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === 'map' ? '#3177a7' : 'inherit',color: selectedItem === 'map' ? '#fff' : 'inherit' }} onClick={() => this.handleListItemClick('map')}>\r\n                                <ListItemIcon><MapIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"Map\" />\r\n                            </ListItem>\r\n                            <ListItem button component={Link} to=\"/archive\" style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === 'archive' ? '#3177a7' : 'inherit',color: selectedItem === 'archive' ? '#fff' : 'inherit' }} onClick={() => this.handleListItemClick('archive')}>\r\n                                <ListItemIcon><ArchiveIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"Lưu trữ\" />\r\n                            </ListItem>\r\n                            <ListItem button component={Link} to=\"/calendar\" style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === 'calendar' ? '#3177a7' : 'inherit',color: selectedItem === 'calendar' ? '#fff' : 'inherit' }} onClick={() => this.handleListItemClick('calendar')}>\r\n                                <ListItemIcon><CalendarTodayIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"Lịch\" />\r\n                            </ListItem>\r\n\r\n                        </List>\r\n                    </div>\r\n                </Drawer>\r\n                <div style={{ flexGrow: 1, padding: '0 24px' }}>\r\n                    <AppBar position=\"static\" style={{ marginBottom: 25 }}>\r\n                        <Toolbar>\r\n                        <Avatar src='https://th.bing.com/th/id/OIP.Kq_YUiiLMLNK2gEG6RY9bQHaHa?w=170&h=180&c=7&r=0&o=5&pid=1.7'></Avatar>\r\n                        <Typography variant=\"h6\" component=\"div\" style={{ marginLeft:'10px',flexGrow: 1, fontSize: '14px' }}>\r\n                            Công Ty Cổ Phần Công Trình Cầu Phà Thành Phố Hồ Chí Minh <br/> Xí Nghiệp Công Trình 8\r\n                        </Typography>\r\n                            <Button color=\"inherit\" onClick={this.handleClickOpen}>Update</Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n\r\n                    \r\n                    \r\n                     \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Message\\Message.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138"],[],"import MenuIcon from '@mui/icons-material/Menu';\r\nimport { AppBar, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Drawer, FormControl, IconButton, InputLabel, List, ListItem, ListItemIcon, ListItemText, MenuItem, Select, Toolbar, Typography, Collapse } from '@mui/material'; // Thêm Collapse vào import\r\nimport React, { Component } from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\n \r\nimport ExpandLess from '@mui/icons-material/ExpandLess'; // Thêm ExpandLess vào import\r\nimport ExpandMore from '@mui/icons-material/ExpandMore'; // Thêm ExpandMore vào import\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\n// Import các icon cần thiết\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\r\nimport MessageIcon from '@mui/icons-material/Message';\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport ArchiveIcon from '@mui/icons-material/Archive';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\n\r\n \r\nimport MessageList from './MessageList';\r\nimport ChatDetail from './ChatDetail';\r\nimport MediaStorage from './MediaStorage';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            doorFinish: \"Satin\",\r\n            collections: [],\r\n            selectedCollection: '',\r\n            documents: [],\r\n            collectionDetails: {}, // To store the linkanh and urn for each collection\r\n            selectedCarouselIndex: 0, // Track the index of the selected item in the carousel\r\n            showCarousel: true // State to control the visibility of the carousel\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchCollections();\r\n    }\r\n\r\n    fetchCollections = () => {\r\n        fetch('https://revitmongo.onrender.com/zz')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.collections) {\r\n                    const collections = data.collections;\r\n                    this.setState({ collections }, () => {\r\n                        collections.forEach(collection => {\r\n                            this.fetchFirstDocumentDetails(collection);\r\n                        });\r\n                    });\r\n                } else {\r\n                    console.error('Error: collections data not found in response:', data);\r\n                }\r\n            })\r\n            .catch(error => console.error('Error fetching collections:', error));\r\n    }\r\n\r\n    fetchFirstDocumentDetails = (collectionName) => {\r\n        fetch(`https://revitmongo.onrender.com/collections/${collectionName}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data && data.length > 0) {\r\n                    const firstDocument = data[0];\r\n                    if (firstDocument.linkanh && firstDocument.urn) {\r\n                        this.setState(prevState => ({\r\n                            collectionDetails: {\r\n                                ...prevState.collectionDetails,\r\n                                [collectionName]: {\r\n                                    linkanh: firstDocument.linkanh,\r\n                                    urn: firstDocument.urn,\r\n                                    location: firstDocument.location // Add location field if it exists\r\n                                }\r\n                            }\r\n                        }));\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => console.error(`Error fetching first document of ${collectionName}:`, error));\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ doorFinish: event.target.value });\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    }\r\n\r\n    handleCollectionChange = (event) => {\r\n        const collectionName = event.target.value;\r\n        this.setState({ selectedCollection: collectionName });\r\n        this.fetchDocumentsInCollection(collectionName);\r\n    }\r\n\r\n    fetchDocumentsInCollection = (collectionName) => {\r\n        if (collectionName) {\r\n            fetch(`https://revitmongo.onrender.com/collections/${collectionName}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({ documents: data });\r\n                })\r\n                .catch(error => console.error('Error fetching documents:', error));\r\n        } else {\r\n            this.setState({ documents: [] });\r\n        }\r\n    }\r\n\r\n    handleCarouselChange = (index) => {\r\n        if (this.state.selectedCarouselIndex !== index) {\r\n            this.setState({ selectedCarouselIndex: index });\r\n        }\r\n    }\r\n\r\n    handleCarouselItemClick = (index) => {\r\n        this.setState({ selectedCarouselIndex: index });\r\n    }\r\n\r\n    toggleCarouselVisibility = () => {\r\n        this.setState(prevState => ({ showCarousel: !prevState.showCarousel }));\r\n    }\r\n\r\n    // Hàm mở Drawer\r\n    handleDrawerOpen = () => {\r\n        this.setState({ drawerOpen: true });\r\n    }\r\n\r\n    // Hàm đóng Drawer\r\n    handleDrawerClose = () => {\r\n        this.setState({ drawerOpen: false });\r\n    }\r\n    // Hàm để mở và đóng danh sách dự án con\r\n    handleProjectClick = () => {\r\n        this.setState(prevState => ({\r\n            openProject: !prevState.openProject\r\n        }));\r\n    }\r\n    \r\n    handleListItemClick = (item) => {\r\n        this.setState((prevState) => ({\r\n            selectedItem: prevState.selectedItem === item ? null : item\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const { open, doorFinish, collections, selectedCollection, documents, collectionDetails, selectedCarouselIndex, showCarousel, drawerOpen, openProject,selectedItem  } = this.state; // Thêm openProject vào đây\r\n\r\n            const selectedCollectionName = collections[selectedCarouselIndex];\r\n            const selectedCollectionUrn = collectionDetails[selectedCollectionName]?.urn;\r\n\r\n        const responsive = {\r\n            superLargeDesktop: {\r\n                breakpoint: { max: 4000, min: 3000 },\r\n                items: 4\r\n            },\r\n            desktop: {\r\n                breakpoint: { max: 3000, min: 1024 },\r\n                items: 4\r\n            },\r\n            tablet: {\r\n                breakpoint: { max: 1024, min: 464 },\r\n                items: 2\r\n            },\r\n            mobile: {\r\n                breakpoint: { max: 464, min: 0 },\r\n                items: 1\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className='viewer-home' style={{ display: 'flex' }}>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    anchor=\"left\"\r\n                    sx={{\r\n                        width: 240,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                            width: 240,\r\n                            boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                >\r\n                    <Toolbar />\r\n                    <div>\r\n                    <List>\r\n                            {/* Thông tin của người dùng */}\r\n                            <ListItem style={{  paddingTop: 20, borderRadius: 8 }} >\r\n                                <img src=\"link-to-user-image\" alt=\"User\" style={{ width: 50, height: 50, borderRadius: '50%' }} />\r\n                                <ListItemText primary=\"Tên Người Dùng\" secondary=\"Chức Vụ\" />\r\n                            </ListItem>\r\n\r\n                            {/* Mục Dự án */}\r\n                            <ListItem \r\n                                button \r\n                                onClick={this.handleProjectClick} \r\n                                style={{ paddingTop: 20, borderRadius: 8 }}\r\n                                component={Link} \r\n                                to=\"/view\"\r\n                            >\r\n                                <ListItemIcon><WorkIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"Dự án\" />\r\n                                {openProject ? <ExpandLess /> : <ExpandMore />}\r\n                            </ListItem>\r\n                            <Collapse in={openProject} timeout=\"auto\" unmountOnExit>\r\n                                {/* Danh sách các dự án con */}\r\n                                <div style={{ paddingLeft: 50 }}>\r\n                                    <List component=\"ul\">\r\n                                        {collections.map(collection => (\r\n                                            <ListItem \r\n                                                button \r\n                                                key={collection} \r\n                                                style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === collection ? '#3177a7' : 'inherit',color: selectedItem === collection ? '#fff' : 'inherit' }} \r\n                                                onClick={() => this.handleListItemClick(collection)}\r\n                                            >\r\n                                                <ListItemText primary={collection} />\r\n                                            </ListItem>\r\n                                        ))}\r\n                                    </List>\r\n                                </div>\r\n                            </Collapse>\r\n\r\n\r\n                            {/* Các mục khác */}\r\n                            <ListItem button component={Link} to=\"/manager\" style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === 'manageAccounts' ? '#3177a7' : 'inherit',color: selectedItem === 'manageAccounts' ? '#fff' : 'inherit' }} onClick={() => this.handleListItemClick('manageAccounts')}>\r\n                                <ListItemIcon><ManageAccountsIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"Quản lý\" />\r\n                            </ListItem>\r\n                            <ListItem button component={Link} to=\"/message\" style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === 'message' ? '#3177a7' : 'inherit',color: selectedItem === 'message' ? '#fff' : 'inherit' }} onClick={() => this.handleListItemClick('message')}>\r\n                                <ListItemIcon><MessageIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"Tin nhắn\" />\r\n                            </ListItem>\r\n                            <ListItem button component={Link} to=\"/map\" style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === 'map' ? '#3177a7' : 'inherit',color: selectedItem === 'map' ? '#fff' : 'inherit' }} onClick={() => this.handleListItemClick('map')}>\r\n                                <ListItemIcon><MapIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"Map\" />\r\n                            </ListItem>\r\n                            <ListItem button component={Link} to=\"/archive\" style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === 'archive' ? '#3177a7' : 'inherit',color: selectedItem === 'archive' ? '#fff' : 'inherit' }} onClick={() => this.handleListItemClick('archive')}>\r\n                                <ListItemIcon><ArchiveIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"Lưu trữ\" />\r\n                            </ListItem>\r\n                            <ListItem button component={Link} to=\"/calendar\" style={{ paddingTop: 20, borderRadius: 8,backgroundColor: selectedItem === 'calendar' ? '#3177a7' : 'inherit',color: selectedItem === 'calendar' ? '#fff' : 'inherit' }} onClick={() => this.handleListItemClick('calendar')}>\r\n                                <ListItemIcon><CalendarTodayIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"Lịch\" />\r\n                            </ListItem>\r\n\r\n                        </List>\r\n                    </div>\r\n                </Drawer>\r\n                <div style={{ flexGrow: 1, padding: '0 24px' }}>\r\n                    <AppBar position=\"static\" style={{ marginBottom: 25 }}>\r\n                        <Toolbar>\r\n                            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                                Vina Tech\r\n                            </Typography>\r\n                            <Button color=\"inherit\" onClick={this.handleClickOpen}>Update</Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n\r\n                    \r\n\r\n                    <div className=\"app\">\r\n                    <div className=\"column1\">\r\n                        <MessageList />\r\n                    </div>\r\n                    <div className=\"column2\">\r\n                        <ChatDetail />\r\n                    </div>\r\n                    <div className=\"column3\">\r\n                        <MediaStorage />\r\n                    </div>\r\n                    </div>\r\n                     \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Manager\\Manager.js",[],[],"D:\\ProjectForCauPha\\client\\client\\src\\pages\\Map\\Map.js",[],[],"D:\\ProjectForCauPha\\client\\client\\src\\pages\\Calendar\\Calendar.js",[],[],"D:\\ProjectForCauPha\\client\\client\\src\\pages\\Login\\Login.js",[],[],"D:\\ProjectForCauPha\\client\\client\\src\\pages\\Archive\\Archive.js",[],[],"D:\\ProjectForCauPha\\client\\client\\src\\pages\\Message\\ChatDetail.js",[],[],"D:\\ProjectForCauPha\\client\\client\\src\\pages\\Message\\MessageList.js",[],[],"D:\\ProjectForCauPha\\client\\client\\src\\pages\\Message\\MediaStorage.js",[],[],"D:\\ProjectForCauPha\\client\\client\\src\\pages\\Viewer\\ViewerFunctions.js",["139","140","141"],[],"/* global Autodesk, THREE */\r\nimport Client from \"../Auth\";\r\nimport axios from \"axios\";\r\n\r\nvar getToken = {accessToken: Client.getAccesstoken()};\r\nvar viewer;\r\n\r\nfunction launchViewer(div, urn){\r\n    \r\n    getToken.accessToken.then((token) => {\r\n        \r\n        var options = {\r\n            'env': 'AutodeskProduction',\r\n            'accessToken': token.access_token\r\n        };\r\n\r\n        Autodesk.Viewing.Initializer(options, function() {\r\n\r\n            var htmlDiv = document.getElementById(div);\r\n            viewer = new Autodesk.Viewing.GuiViewer3D(htmlDiv);\r\n            var startedCode = viewer.start();\r\n            if (startedCode > 0) {\r\n                console.error('Failed to create a Viewer: WebGL not supported.');\r\n                return;\r\n            }\r\n\r\n            console.log('Initialization complete, loading a model next...');\r\n\r\n        });\r\n\r\n        var documentId = urn;\r\n        Autodesk.Viewing.Document.load(documentId, onDocumentLoadSuccess, onDocumentLoadFailure);\r\n\r\n        viewer.addEventListener(Autodesk.Viewing.GEOMETRY_LOADED_EVENT, onGeometryLoaded);\r\n\r\n        function onDocumentLoadSuccess(viewerDocument) {\r\n            var defaultModel = viewerDocument.getRoot().getDefaultGeometry();\r\n            viewer.loadDocumentNode(viewerDocument, defaultModel);\r\n        };\r\n        \r\n        function onDocumentLoadFailure() {\r\n            console.error('Failed fetching Forge manifest');\r\n        };\r\n\r\n    })\r\n};\r\n\r\nfunction onGeometryLoaded(event){\r\n    var viewer = event.target;\r\n\r\n    viewer.removeEventListener(Autodesk.Viewing.GEOMETRY_LOADED_EVENT, onGeometryLoaded);\r\n\tviewer.fitToView();\r\n\r\n    viewer.model.getExternalIdMapping((data) => {\r\n\r\n        axios.get('*your backend url/api/doors')\r\n        .then((response) => {\r\n            \r\n            var doorInfo = new Map();\r\n\r\n            for(var i in response.data){\r\n                \r\n                Object.keys(data).forEach((key) => {\r\n\r\n                    if(key == response.data[i]._id){\r\n                        doorInfo.set(data[key], response.data[i].DoorFinish);\r\n                    }\r\n                })\r\n            };\r\n\r\n            doorInfo.forEach((v, k) => {\r\n                \r\n                switch(v){\r\n                    case 'Satin':\r\n                        var blue = new THREE.Vector4(0, 0, 255, 1);\r\n                        viewer.setThemingColor(k, blue);\r\n                        break;\r\n                    case 'Varnish':\r\n                        var red = new THREE.Vector4(1, 0, 0, 1);\r\n                        viewer.setThemingColor(k, red);\r\n                        break;\r\n                    case 'Veneer':\r\n                        var yellow = new THREE.Vector4(255, 255, 0, 1);\r\n                        viewer.setThemingColor(k, yellow);\r\n                        break;\r\n                    case 'Gloss':\r\n                        var green = new THREE.Vector4(0, 255, 0, 1);\r\n                        viewer.setThemingColor(k, green);\r\n                        break;\r\n                }\r\n            })\r\n        }).catch((error) => console.log(error));\r\n    }, (err) => console.log(err));\r\n};\r\n\r\nexport function getSelection(DoorFinish){\r\n\r\n    const dbId = viewer.getSelection()[0];\r\n\r\n    if(viewer.getSelectionCount() !== 1){\r\n        alert(\"Select Door Element\");\r\n    }\r\n    else if(viewer.getSelectionCount() > 0){\r\n        \r\n        viewer.model.getProperties(dbId, (item) => {\r\n\r\n            var data = {\r\n                \"_id\": `${item.externalId}`,\r\n                \"DoorFinish\": DoorFinish\r\n            };\r\n\r\n            axios.patch('*your backend url/api/doors/update', data)\r\n            .then((response) => {\r\n                alert(\"DoorFinish Value Updated\");\r\n                window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nexport default launchViewer;","D:\\ProjectForCauPha\\client\\client\\src\\pages\\Auth.js",[],[],{"ruleId":"142","severity":1,"message":"143","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":18},{"ruleId":"142","severity":1,"message":"146","line":178,"column":79,"nodeType":"144","messageId":"145","endLine":178,"endColumn":96},{"ruleId":"142","severity":1,"message":"147","line":180,"column":15,"nodeType":"144","messageId":"145","endLine":180,"endColumn":37},{"ruleId":"142","severity":1,"message":"148","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":16},{"ruleId":"142","severity":1,"message":"149","line":2,"column":26,"nodeType":"144","messageId":"145","endLine":2,"endColumn":32},{"ruleId":"142","severity":1,"message":"150","line":2,"column":34,"nodeType":"144","messageId":"145","endLine":2,"endColumn":47},{"ruleId":"142","severity":1,"message":"151","line":2,"column":49,"nodeType":"144","messageId":"145","endLine":2,"endColumn":62},{"ruleId":"142","severity":1,"message":"152","line":2,"column":64,"nodeType":"144","messageId":"145","endLine":2,"endColumn":81},{"ruleId":"142","severity":1,"message":"153","line":2,"column":83,"nodeType":"144","messageId":"145","endLine":2,"endColumn":94},{"ruleId":"142","severity":1,"message":"154","line":2,"column":104,"nodeType":"144","messageId":"145","endLine":2,"endColumn":115},{"ruleId":"142","severity":1,"message":"155","line":2,"column":117,"nodeType":"144","messageId":"145","endLine":2,"endColumn":127},{"ruleId":"142","severity":1,"message":"156","line":2,"column":129,"nodeType":"144","messageId":"145","endLine":2,"endColumn":139},{"ruleId":"142","severity":1,"message":"157","line":2,"column":185,"nodeType":"144","messageId":"145","endLine":2,"endColumn":193},{"ruleId":"142","severity":1,"message":"158","line":2,"column":195,"nodeType":"144","messageId":"145","endLine":2,"endColumn":201},{"ruleId":"142","severity":1,"message":"159","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":16},{"ruleId":"142","severity":1,"message":"160","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":20},{"ruleId":"142","severity":1,"message":"161","line":6,"column":24,"nodeType":"144","messageId":"145","endLine":6,"endColumn":36},{"ruleId":"142","severity":1,"message":"162","line":9,"column":27,"nodeType":"144","messageId":"145","endLine":9,"endColumn":33},{"ruleId":"142","severity":1,"message":"163","line":9,"column":35,"nodeType":"144","messageId":"145","endLine":9,"endColumn":40},{"ruleId":"142","severity":1,"message":"164","line":9,"column":42,"nodeType":"144","messageId":"145","endLine":9,"endColumn":48},{"ruleId":"142","severity":1,"message":"143","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":18},{"ruleId":"142","severity":1,"message":"165","line":147,"column":17,"nodeType":"144","messageId":"145","endLine":147,"endColumn":21},{"ruleId":"142","severity":1,"message":"166","line":147,"column":23,"nodeType":"144","messageId":"145","endLine":147,"endColumn":33},{"ruleId":"142","severity":1,"message":"167","line":147,"column":48,"nodeType":"144","messageId":"145","endLine":147,"endColumn":66},{"ruleId":"142","severity":1,"message":"168","line":147,"column":68,"nodeType":"144","messageId":"145","endLine":147,"endColumn":77},{"ruleId":"142","severity":1,"message":"169","line":147,"column":121,"nodeType":"144","messageId":"145","endLine":147,"endColumn":133},{"ruleId":"142","severity":1,"message":"170","line":147,"column":135,"nodeType":"144","messageId":"145","endLine":147,"endColumn":145},{"ruleId":"142","severity":1,"message":"171","line":150,"column":19,"nodeType":"144","messageId":"145","endLine":150,"endColumn":40},{"ruleId":"142","severity":1,"message":"172","line":152,"column":15,"nodeType":"144","messageId":"145","endLine":152,"endColumn":25},{"ruleId":"142","severity":1,"message":"148","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":16},{"ruleId":"142","severity":1,"message":"149","line":2,"column":26,"nodeType":"144","messageId":"145","endLine":2,"endColumn":32},{"ruleId":"142","severity":1,"message":"150","line":2,"column":34,"nodeType":"144","messageId":"145","endLine":2,"endColumn":47},{"ruleId":"142","severity":1,"message":"151","line":2,"column":49,"nodeType":"144","messageId":"145","endLine":2,"endColumn":62},{"ruleId":"142","severity":1,"message":"152","line":2,"column":64,"nodeType":"144","messageId":"145","endLine":2,"endColumn":81},{"ruleId":"142","severity":1,"message":"153","line":2,"column":83,"nodeType":"144","messageId":"145","endLine":2,"endColumn":94},{"ruleId":"142","severity":1,"message":"154","line":2,"column":104,"nodeType":"144","messageId":"145","endLine":2,"endColumn":115},{"ruleId":"142","severity":1,"message":"155","line":2,"column":117,"nodeType":"144","messageId":"145","endLine":2,"endColumn":127},{"ruleId":"142","severity":1,"message":"156","line":2,"column":129,"nodeType":"144","messageId":"145","endLine":2,"endColumn":139},{"ruleId":"142","severity":1,"message":"157","line":2,"column":185,"nodeType":"144","messageId":"145","endLine":2,"endColumn":193},{"ruleId":"142","severity":1,"message":"158","line":2,"column":195,"nodeType":"144","messageId":"145","endLine":2,"endColumn":201},{"ruleId":"142","severity":1,"message":"159","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":16},{"ruleId":"142","severity":1,"message":"162","line":9,"column":27,"nodeType":"144","messageId":"145","endLine":9,"endColumn":33},{"ruleId":"142","severity":1,"message":"163","line":9,"column":35,"nodeType":"144","messageId":"145","endLine":9,"endColumn":40},{"ruleId":"142","severity":1,"message":"164","line":9,"column":42,"nodeType":"144","messageId":"145","endLine":9,"endColumn":48},{"ruleId":"142","severity":1,"message":"143","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":18},{"ruleId":"142","severity":1,"message":"165","line":152,"column":17,"nodeType":"144","messageId":"145","endLine":152,"endColumn":21},{"ruleId":"142","severity":1,"message":"166","line":152,"column":23,"nodeType":"144","messageId":"145","endLine":152,"endColumn":33},{"ruleId":"142","severity":1,"message":"167","line":152,"column":48,"nodeType":"144","messageId":"145","endLine":152,"endColumn":66},{"ruleId":"142","severity":1,"message":"168","line":152,"column":68,"nodeType":"144","messageId":"145","endLine":152,"endColumn":77},{"ruleId":"142","severity":1,"message":"169","line":152,"column":121,"nodeType":"144","messageId":"145","endLine":152,"endColumn":133},{"ruleId":"142","severity":1,"message":"170","line":152,"column":135,"nodeType":"144","messageId":"145","endLine":152,"endColumn":145},{"ruleId":"142","severity":1,"message":"171","line":155,"column":19,"nodeType":"144","messageId":"145","endLine":155,"endColumn":40},{"ruleId":"142","severity":1,"message":"172","line":157,"column":15,"nodeType":"144","messageId":"145","endLine":157,"endColumn":25},{"ruleId":"173","severity":1,"message":"174","line":63,"column":43,"nodeType":"175","messageId":"176","endLine":68,"endColumn":18},{"ruleId":"177","severity":1,"message":"178","line":65,"column":28,"nodeType":"179","messageId":"180","endLine":65,"endColumn":30},{"ruleId":"181","severity":1,"message":"182","line":73,"column":17,"nodeType":"183","messageId":"184","endLine":90,"endColumn":18},"no-unused-vars","'PersonIcon' is defined but never used.","Identifier","unusedVar","'collectionDetails' is assigned a value but never used.","'selectedCollectionName' is assigned a value but never used.","'MenuIcon' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'FormControl' is defined but never used.","'IconButton' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'Carousel' is defined but never used.","'launchViewer' is defined but never used.","'getSelection' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'open' is assigned a value but never used.","'doorFinish' is assigned a value but never used.","'selectedCollection' is assigned a value but never used.","'documents' is assigned a value but never used.","'showCarousel' is assigned a value but never used.","'drawerOpen' is assigned a value but never used.","'selectedCollectionUrn' is assigned a value but never used.","'responsive' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i', 'i'.","ArrowFunctionExpression","unsafeRefs","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]