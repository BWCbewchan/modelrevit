{"ast":null,"code":"/* global Autodesk, THREE */\nimport Client from \"../Auth\";\nimport axios from \"axios\";\nvar getToken = {\n  accessToken: Client.getAccesstoken()\n};\nvar viewer;\nfunction launchViewer(div, urn) {\n  getToken.accessToken.then(token => {\n    var options = {\n      'env': 'AutodeskProduction',\n      'accessToken': token.access_token\n    };\n    Autodesk.Viewing.Initializer(options, function () {\n      var htmlDiv = document.getElementById(div);\n      viewer = new Autodesk.Viewing.GuiViewer3D(htmlDiv);\n      var startedCode = viewer.start();\n      if (startedCode > 0) {\n        console.error('Failed to create a Viewer: WebGL not supported.');\n        return;\n      }\n      console.log('Initialization complete, loading a model next...');\n    });\n    var documentId = urn;\n    Autodesk.Viewing.Document.load(documentId, onDocumentLoadSuccess, onDocumentLoadFailure);\n    viewer.addEventListener(Autodesk.Viewing.GEOMETRY_LOADED_EVENT, onGeometryLoaded);\n    function onDocumentLoadSuccess(viewerDocument) {\n      var defaultModel = viewerDocument.getRoot().getDefaultGeometry();\n      viewer.loadDocumentNode(viewerDocument, defaultModel);\n    }\n    ;\n    function onDocumentLoadFailure() {\n      console.error('Failed fetching Forge manifest');\n    }\n    ;\n  });\n}\n;\nfunction onGeometryLoaded(event) {\n  var viewer = event.target;\n  viewer.removeEventListener(Autodesk.Viewing.GEOMETRY_LOADED_EVENT, onGeometryLoaded);\n  viewer.fitToView();\n  viewer.model.getExternalIdMapping(data => {\n    axios.get('*your backend url/api/doors').then(response => {\n      var doorInfo = new Map();\n      for (var i in response.data) {\n        Object.keys(data).forEach(key => {\n          if (key == response.data[i]._id) {\n            doorInfo.set(data[key], response.data[i].DoorFinish);\n          }\n        });\n      }\n      ;\n      doorInfo.forEach((v, k) => {\n        switch (v) {\n          case 'Satin':\n            var blue = new THREE.Vector4(0, 0, 255, 1);\n            viewer.setThemingColor(k, blue);\n            break;\n          case 'Varnish':\n            var red = new THREE.Vector4(1, 0, 0, 1);\n            viewer.setThemingColor(k, red);\n            break;\n          case 'Veneer':\n            var yellow = new THREE.Vector4(255, 255, 0, 1);\n            viewer.setThemingColor(k, yellow);\n            break;\n          case 'Gloss':\n            var green = new THREE.Vector4(0, 255, 0, 1);\n            viewer.setThemingColor(k, green);\n            break;\n        }\n      });\n    }).catch(error => console.log(error));\n  }, err => console.log(err));\n}\n;\nexport function getSelection(DoorFinish) {\n  const dbId = viewer.getSelection()[0];\n  if (viewer.getSelectionCount() !== 1) {\n    alert(\"Select Door Element\");\n  } else if (viewer.getSelectionCount() > 0) {\n    viewer.model.getProperties(dbId, item => {\n      var data = {\n        \"_id\": `${item.externalId}`,\n        \"DoorFinish\": DoorFinish\n      };\n      axios.patch('*your backend url/api/doors/update', data).then(response => {\n        alert(\"DoorFinish Value Updated\");\n        window.location.reload();\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  }\n}\nexport default launchViewer;","map":{"version":3,"names":["Client","axios","getToken","accessToken","getAccesstoken","viewer","launchViewer","div","urn","then","token","options","access_token","Autodesk","Viewing","Initializer","htmlDiv","document","getElementById","GuiViewer3D","startedCode","start","console","error","log","documentId","Document","load","onDocumentLoadSuccess","onDocumentLoadFailure","addEventListener","GEOMETRY_LOADED_EVENT","onGeometryLoaded","viewerDocument","defaultModel","getRoot","getDefaultGeometry","loadDocumentNode","event","target","removeEventListener","fitToView","model","getExternalIdMapping","data","get","response","doorInfo","Map","i","Object","keys","forEach","key","_id","set","DoorFinish","v","k","blue","THREE","Vector4","setThemingColor","red","yellow","green","catch","err","getSelection","dbId","getSelectionCount","alert","getProperties","item","externalId","patch","window","location","reload"],"sources":["D:/GitReactAppRevit/Autodesk-Forge-React-Viewer/src/pages/Viewer/ViewerFunctions.js"],"sourcesContent":["/* global Autodesk, THREE */\r\nimport Client from \"../Auth\";\r\nimport axios from \"axios\";\r\n\r\nvar getToken = {accessToken: Client.getAccesstoken()};\r\nvar viewer;\r\n\r\nfunction launchViewer(div, urn){\r\n    \r\n    getToken.accessToken.then((token) => {\r\n        \r\n        var options = {\r\n            'env': 'AutodeskProduction',\r\n            'accessToken': token.access_token\r\n        };\r\n\r\n        Autodesk.Viewing.Initializer(options, function() {\r\n\r\n            var htmlDiv = document.getElementById(div);\r\n            viewer = new Autodesk.Viewing.GuiViewer3D(htmlDiv);\r\n            var startedCode = viewer.start();\r\n            if (startedCode > 0) {\r\n                console.error('Failed to create a Viewer: WebGL not supported.');\r\n                return;\r\n            }\r\n\r\n            console.log('Initialization complete, loading a model next...');\r\n\r\n        });\r\n\r\n        var documentId = urn;\r\n        Autodesk.Viewing.Document.load(documentId, onDocumentLoadSuccess, onDocumentLoadFailure);\r\n\r\n        viewer.addEventListener(Autodesk.Viewing.GEOMETRY_LOADED_EVENT, onGeometryLoaded);\r\n\r\n        function onDocumentLoadSuccess(viewerDocument) {\r\n            var defaultModel = viewerDocument.getRoot().getDefaultGeometry();\r\n            viewer.loadDocumentNode(viewerDocument, defaultModel);\r\n        };\r\n        \r\n        function onDocumentLoadFailure() {\r\n            console.error('Failed fetching Forge manifest');\r\n        };\r\n\r\n    })\r\n};\r\n\r\nfunction onGeometryLoaded(event){\r\n    var viewer = event.target;\r\n\r\n    viewer.removeEventListener(Autodesk.Viewing.GEOMETRY_LOADED_EVENT, onGeometryLoaded);\r\n\tviewer.fitToView();\r\n\r\n    viewer.model.getExternalIdMapping((data) => {\r\n\r\n        axios.get('*your backend url/api/doors')\r\n        .then((response) => {\r\n            \r\n            var doorInfo = new Map();\r\n\r\n            for(var i in response.data){\r\n                \r\n                Object.keys(data).forEach((key) => {\r\n\r\n                    if(key == response.data[i]._id){\r\n                        doorInfo.set(data[key], response.data[i].DoorFinish);\r\n                    }\r\n                })\r\n            };\r\n\r\n            doorInfo.forEach((v, k) => {\r\n                \r\n                switch(v){\r\n                    case 'Satin':\r\n                        var blue = new THREE.Vector4(0, 0, 255, 1);\r\n                        viewer.setThemingColor(k, blue);\r\n                        break;\r\n                    case 'Varnish':\r\n                        var red = new THREE.Vector4(1, 0, 0, 1);\r\n                        viewer.setThemingColor(k, red);\r\n                        break;\r\n                    case 'Veneer':\r\n                        var yellow = new THREE.Vector4(255, 255, 0, 1);\r\n                        viewer.setThemingColor(k, yellow);\r\n                        break;\r\n                    case 'Gloss':\r\n                        var green = new THREE.Vector4(0, 255, 0, 1);\r\n                        viewer.setThemingColor(k, green);\r\n                        break;\r\n                }\r\n            })\r\n        }).catch((error) => console.log(error));\r\n    }, (err) => console.log(err));\r\n};\r\n\r\nexport function getSelection(DoorFinish){\r\n\r\n    const dbId = viewer.getSelection()[0];\r\n\r\n    if(viewer.getSelectionCount() !== 1){\r\n        alert(\"Select Door Element\");\r\n    }\r\n    else if(viewer.getSelectionCount() > 0){\r\n        \r\n        viewer.model.getProperties(dbId, (item) => {\r\n\r\n            var data = {\r\n                \"_id\": `${item.externalId}`,\r\n                \"DoorFinish\": DoorFinish\r\n            };\r\n\r\n            axios.patch('*your backend url/api/doors/update', data)\r\n            .then((response) => {\r\n                alert(\"DoorFinish Value Updated\");\r\n                window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nexport default launchViewer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}